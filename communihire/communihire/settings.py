"""
Django settings for communihire project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
'''welch'''

from pathlib import Path
import os
from datetime import timedelta


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-fvc9fxu(&=hgz!1s)((i+m_%&#lr1ii%bjelhq*!)6ygm98b3^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '.vercel.app', '.now.sh','c5a4-41-90-190-29.ngrok-free.app']

#ALLOWED_HOSTS = ['localhost', '127.0.0.1', '4c05-41-90-188-224.ngrok-free.app']

CSRF_TRUSTED_ORIGINS = [
    "https://2bac-41-90-178-143.ngrok-free.app",
    "https://c5a4-41-90-190-29.ngrok-free.app",
]

'''

CORS_ALLOWED_ORIGINS = [
    "2bac-41-90-178-143.ngrok-free.app",  # Your existing ngrok URL
    "4c05-41-90-188-224.ngrok-free.app",  # Add your new ngrok URL here
]



'''


CSRF_COOKIE_SECURE = False

SESSION_COOKIE_SECURE = False
#change to true after deplying

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'projects.apps.ProjectsConfig',
    'users.apps.UsersConfig',
    'rest_framework',
    "corsheaders",

]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',

    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    
]

ROOT_URLCONF = 'communihire.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'communihire.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases



'''

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}




'''

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'communihire',         # The name of your database
        'USER': 'postgres',   # Your database username
        'PASSWORD': 'henrix',    # Your database password
        'HOST': 'localhost',           # The host where PostgreSQL is running
        'PORT': '5432',                # The port PostgreSQL is listening on
    }
}

'''

DATABASES = {
    load
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'communihire',  # The name of the database
        'USER': os.environ.get('postgres'),  # Database user (retrieved from environment variables)
        'PASSWORD': os.environ.get('henrix'),  # Database user's password (retrieved from environment variables)
        'HOST': os.environ.get('localhost'),  # Database host (retrieved from environment variables)
        'PORT': '5432',  # Port number for the database server
    }
}

'''

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

#CORS_ALLOW_ALL_ORIGINS = True


'''

CORS_ALLOWED_ORIGINS = [
    "https://2bac-41-90-178-143.ngrok-free.app",  # Add your NGROK URL here
]


'''
# Allow credentials (cookies, authentication headers) to be included in cross-origin requests
CORS_ALLOW_CREDENTIALS = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'nickolisto@gmail.com'
EMAIL_HOST_PASSWORD = 'betjvoxsxntlswco'



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
# Correct STATIC_URL declaration
STATIC_URL = '/static/'

MEDIA_URL = '/images/'

# STATICFILES_DIRS should be a list, not a function call
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

# Specify the correct paths for MEDIA_ROOT and STATIC_ROOT
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/images')
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


import os

DEBUG = os.environ.get('DEBUG', 'True') == 'True'
